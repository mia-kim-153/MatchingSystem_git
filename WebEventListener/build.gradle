version '1.0'

apply plugin: 'java'


apply from: rootProject.projectDir.absolutePath + '/install.gradle'
mainClassName = "receiver.WebEventListener"

repositories {
    mavenCentral()
}

dependencies {
    compile project(':MatchingEngineClient')
    compile group: 'org.mapdb', name: 'mapdb', version: '3.0.8'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile group: 'com.lmax', name: 'disruptor', version: '3.3.6'
}

applicationDefaultJvmArgs = ["-Xmx1G",
                             "-Xms1G",
                             "-d64",
                             "-server",
                             "-XX:+UseStringDeduplication",
                             "-Dagrona.disable.bounds.checks=true",
                             "-XX:+UnlockDiagnosticVMOptions",
                             "-XX:GuaranteedSafepointInterval=300000",
                             "-XX:+UseG1GC",
                             "-XX:+UseLargePages",
                             "-XX:+OptimizeStringConcat",
                             "-XX:+UseCondCardMark"]

task webEventListener(type: CreateStartScripts) {
    mainClassName = "receiver.WebEventListener"
    applicationName = "WebEventListener"
    outputDir = new File(project.buildDir, 'scripts')
    classpath = jar.outputs.files + project.configurations.runtime +
            files('build/install/' + project.name + '/resources')
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\resources', '%APP_HOME%\\resources')
        unixScriptFile.text = unixScriptFile.text.replace('$APP_HOME/lib/resources', '$APP_HOME/resources')
    }

}

applicationDistribution.into("bin") {
    from(webEventListener)
    fileMode = 0755
}
